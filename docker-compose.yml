version: '3.8'
services:
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - crypto-net

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    networks:
      - crypto-net
  
  spark-master:
    image: bitnami/spark:3
    container_name: spark-master
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    ports:
      - "8080:8080"
    networks:
      - crypto-net
    depends_on:
      - kafka

  spark-worker:
    image: bitnami/spark:3
    container_name: spark-worker
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    networks:
      - crypto-net
    depends_on:
      - spark-master

  mongodb:
    image: mongo
    container_name: mongodb
    ports:
      - "27017:27017"
    networks:
      - crypto-net
  
  cassandradb:
    image: cassandra:latest
    container_name: cassandradb
    ports:
      - "9042:9042"
    networks:
      - crypto-net
    volumes:
      - ./cassandra-scripts:/scripts
    environment:
      - CASSANDRA_START_RPC=true

  websocket-client:
    build:
      context: ./websocket-client
    container_name: websocket-client
    networks:
      - crypto-net

  spark-stream-job:
    build:
      context: ./spark
    container_name: spark-stream-job
    environment:
      SPARK_JOB: stream_processing
      SPARK_CASSANDRA_PACKAGE: "com.datastax.spark:spark-cassandra-connector_2.12:3.2.0"
      SPARK_KAFKA_PACKAGE: "org.apache.spark:spark-sql-kafka-0-10_2.12:3.2.0"
    networks:
      - crypto-net
    depends_on:
      - cassandradb

  # spark-batch-job:
  #   build:
  #     context: ./spark
  #   container_name: spark-batch-job
  #   environment:
  #     SPARK_JOB: batch_processing
  #     SPARK_MONGO_PACKAGE: "org.mongodb.spark:mongo-spark-connector_2.12:3.0.1"
  #   networks:
  #     - crypto-net

  fastapi-app:
    build:
      context: ./fastapi-app
    container_name: fastapi-app
    ports:
      - "8000:8000"
    networks:
      - crypto-net

networks:
  crypto-net:
    name: crypto-net
